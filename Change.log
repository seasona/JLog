2019/8/16 v0.1.0
+ 完成了JLog的大部分功能
+ 实现功能: 日志设定一定的大小滚动；每24小时滚动；重载<<输出；双缓冲区提速
- 待做功能：跨平台化；日志级别处理；使用CMake构建；性能测试；头文件化
* 可选功能：浮点数转文本采用Grisu3算法

2019/8/17 v0.2.0
+ 编写了单元测试

2019/8/18 v0.2.1
+ 使用CMake进行构建

2019/8/19 v0.3.0
+ 加入日志级别处理
- 文件结构待处理，将源码放入src文件夹下，需更改CMake

2019/8/20 v0.3.1
+ 更改了目录结构，并修改了CMake

2019/8/22 v0.4.0
+ 移植到win环境并通过测试
- 需要对输出格式以及源码结构进行微调

2019/8/23 v0.4.1
+ 调整了CMake
+ 修正了MSVC中ERROR全局宏冲突的问题

2019/8/25 v0.4.2
+ 利用Google的benchmark测试，JLog的写入速度大约30MiB/s
- muduo的写入速度是200MiB/s, 差的有点多
- 可能需要自己写个对应的benchmark来进行测试
+ 自己写的benchmark写入速度大概也是30MB/s
- muduo中性能提速的方法:
  1. 日期与时间两部分缓存 -->132w
  2. 日志中的源文件名采用了编译期计算来获取basename, 这里运用了gcc的内置函数，因为JLog是跨平台，所以用不了
  3. 线程id先预先格式化为字符串，在输出日志文件时只需要简单拷贝几个字节 -->50w

2019/8/26 v0.4.3




